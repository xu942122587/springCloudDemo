<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruixun.sincfin.biz.module.account.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.ruixun.sincfin.domain.entity.AccountEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="deleted_flag" property="deletedFlag" jdbcType="BIT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="wallet_balance" property="walletBalance" jdbcType="BIGINT" />
    <result column="withdraw_amount" property="withdrawAmount" jdbcType="BIGINT" />
    <result column="current_investment_amount" property="currentInvestmentAmount" jdbcType="BIGINT" />
    <result column="wait_interest" property="waitInterest" jdbcType="BIGINT" />
    <result column="received_interest" property="receivedInterest" jdbcType="BIGINT" />
    <result column="coupon_bonus_income" property="couponBonusIncome" jdbcType="BIGINT" />
    <result column="total_investment_amount" property="totalInvestmentAmount" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, gmt_create, gmt_modified, deleted_flag, user_id, wallet_balance, withdraw_amount, 
    current_investment_amount, wait_interest, received_interest , coupon_bonus_income , total_investment_amount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" parameterType="com.ruixun.sincfin.domain.entity.AccountEntity" >
    insert into t_account (id, gmt_create, gmt_modified, 
      deleted_flag, user_id, wallet_balance, 
      withdraw_amount, current_investment_amount, 
      wait_interest, received_interest , coupon_bonus_income , 
      total_investment_amount)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{deletedFlag,jdbcType=BIT}, #{userId,jdbcType=BIGINT}, #{walletBalance,jdbcType=BIGINT}, 
      #{withdrawAmount,jdbcType=BIGINT}, #{currentInvestmentAmount,jdbcType=BIGINT}, 
      #{waitInterest,jdbcType=BIGINT}, #{receivedInterest,jdbcType=BIGINT}, #{couponBonusIncome,jdbcType=BIGINT}, 
      #{totalInvestmentAmount,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.ruixun.sincfin.domain.entity.AccountEntity" >
    insert into t_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="deletedFlag != null" >
        deleted_flag,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="walletBalance != null" >
        wallet_balance,
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount,
      </if>
      <if test="currentInvestmentAmount != null" >
        current_investment_amount,
      </if>
      <if test="waitInterest != null" >
        wait_interest,
      </if>
      <if test="receivedInterest != null" >
        received_interest,
      </if>
      <if test="couponBonusIncome != null" >
        coupon_bonus_income,
      </if>
      <if test="totalInvestmentAmount != null" >
        total_investment_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedFlag != null" >
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="walletBalance != null" >
        #{walletBalance,jdbcType=BIGINT},
      </if>
      <if test="withdrawAmount != null" >
        #{withdrawAmount,jdbcType=BIGINT},
      </if>
      <if test="currentInvestmentAmount != null" >
        #{currentInvestmentAmount,jdbcType=BIGINT},
      </if>
      <if test="waitInterest != null" >
        #{waitInterest,jdbcType=BIGINT},
      </if>
      <if test="receivedInterest != null" >
        #{receivedInterest,jdbcType=BIGINT},
      </if>
      <if test="couponBonusIncome != null" >
        #{couponBonusIncome,jdbcType=BIGINT},
      </if>
      <if test="totalInvestmentAmount != null" >
        #{totalInvestmentAmount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruixun.sincfin.domain.entity.AccountEntity" >
    update t_account
    <set >
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedFlag != null" >
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="walletBalance != null" >
        wallet_balance = #{walletBalance,jdbcType=BIGINT},
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount = #{withdrawAmount,jdbcType=BIGINT},
      </if>
      <if test="currentInvestmentAmount != null" >
        current_investment_amount = #{currentInvestmentAmount,jdbcType=BIGINT},
      </if>
      <if test="waitInterest != null" >
        wait_interest = #{waitInterest,jdbcType=BIGINT},
      </if>
      <if test="receivedInterest != null" >
        received_interest = #{receivedInterest,jdbcType=BIGINT},
      </if>
      <if test="couponBonusIncome != null" >
        coupon_bonus_income = #{couponBonusIncome,jdbcType=BIGINT},
      </if>
      <if test="totalInvestmentAmount != null" >
        total_investment_amount = #{totalInvestmentAmount,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruixun.sincfin.domain.entity.AccountEntity" >
    update t_account
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      user_id = #{userId,jdbcType=BIGINT},
      wallet_balance = #{walletBalance,jdbcType=BIGINT},
      withdraw_amount = #{withdrawAmount,jdbcType=BIGINT},
      current_investment_amount = #{currentInvestmentAmount,jdbcType=BIGINT},
      wait_interest = #{waitInterest,jdbcType=BIGINT},
      received_interest = #{receivedInterest,jdbcType=BIGINT},
      coupon_bonus_income = #{couponBonusIncome,jdbcType=BIGINT},
      total_investment_amount = #{totalInvestmentAmount,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="listByCondition" resultMap="BaseResultMap" parameterType="com.ruixun.sincfin.domain.query.AccountQuery">
        select
        <include refid="Base_Column_List"/>
        from t_account
        <where>
            deleted_flag = 0
            <if test="userIdList != null and userIdList.size() > 0">
                and user_id in
                <foreach collection="userIdList" open="(" close=")" item="userIdItem" separator=",">
                    #{userIdItem}
                </foreach>
            </if>
            <if test="userId != null">
                user_id = #{userId}
            </if>
        </where>

    </select>

    <select id="getByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_account
        where deleted_flag = 0 and user_id = #{userId}
    </select>

  <update id="updateWithdrawAmount" >
    update t_account
    set withdraw_amount = withdraw_amount + #{amount}
    where deleted_flag = 0 and user_id = #{userId}
  </update>

  <update id="updateWalletBalance" >
    update t_account
    set wallet_balance = wallet_balance + #{amount}
    where deleted_flag = 0 and user_id = #{userId}
  </update>

  <update id="updateRepayment" >
    update t_account
    set wallet_balance = wallet_balance + #{amount},
        current_investment_amount = current_investment_amount - #{principal},
        wait_interest = wait_interest - #{interest},
        received_interest = received_interest + #{interest}
    where deleted_flag = 0 and user_id = #{userId}
  </update>
  
  <update id="updateAmountFromInvestment" >
    update t_account
    set wallet_balance = wallet_balance - #{paymentAmount},
        current_investment_amount = current_investment_amount + #{amount},
        wait_interest = wait_interest + #{interest},
        coupon_bonus_income = coupon_bonus_income + #{bonusAmount},
        total_investment_amount = total_investment_amount + #{amount}
    where deleted_flag = 0 and user_id = #{userId}
  </update>
  
  

</mapper>